<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnLamLai.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAtVJREFUSEvN
        V0trFEEQnovvx053r1kQ3we9eAneIwoqgr9BPXgS/B0qeooksjvTGxSjENbHQVRE8IFe9R8oRISQDXEz
        M5vZqDjWN9trZnp6k91MTCz4mKbqm6rtmuqqXuu/l2jC2hhU+JnAFdd8ye/7Ln8fg9bQBZKfBkfR80vo
        2vsDl0sKMkeIlkEjcLg7X+V71ev9S7xDV1wnZ6HmvBeEgRRX+84Adkkvf9KcrQDiY1hm+5TbpSVwBkqU
        2i9mR/2DfH32b5cGlHuzRMPWJiqWDyYHf+HweXq+Izwk1HxHvFE6M7+Nt1HZ2qDCZMWT/KbhpQ4m6bud
        j8q7t0ZjBzajgJDGaGLPlqm7pW1UDxfASfB/JtYRvrkKk5aGUzhI36SVJCdQmx7Ztd2XxROUkRcab8Fz
        +TPa+Un8KN9lT0hXJ92lBAcIUTsq3KJ4DrujETuoIU0UbMRg0yBGUcnYRNMpHtPtdNarKlxbkC4qgkAn
        EibjnZJDg82EmUa1cAg+TYEJHuooDgrxKuycgRR5UlykhnDKZDNgtunag8plt8BRU7KzikKBXX7DQApR
        NPR8pelzAU1JhbUs1Xt1Eh0BFAv/oenzwRH3VFgKjLOYIYlxTxaPZPV5wV6rsBSYdpcl5INXKR42ZzId
        +EGWkAeihZNCa4xO3TauwnYtrhWDjubT2TIr0Hoha0sUV7fjhCOhKJQVdpR0UzrHDHuI+JdNttRx6tZA
        OoFVO53W7WawW3VZ3EHrb1mb1kAgppaJwAiKlqkGyG+dk4LDhtvtlT022TMtE2IaEqrRz2AINEYLDCmk
        9XPSJc62aMW6qn083qnDHy3aUjAPCYhhLP5KrOu+FFe+j9k2Pg1GIkYjRiQaDdorcb4m+Cl0HYuQni4C
        uIO1G06NgMsALgXL3cuWvghA1uXq05E5dyenl1ZjOLyEL+W2N1mX621S1vxCr0ucgbX8C/NvxLL+AMyi
        KJdyRw26AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="BtnApDung.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAm9JREFUSEvN
        l01oE0EUxxfETxTxAwXFD1BRSHa3JV48iDdFEAShN88eFM3OVFvBS28q9eRJoSqiVBC8iQeVFqFU251N
        VehJjCievFTFWhT8+L/si00mz022ial/+JHJvP+8l52dndk4/70yk32L/Ch/wDfqgmf0oGfUSIwepD6w
        nzxsb16dhe4tbqSvuUZ9QqFfdfgIBrLjehMPT6/4CvVFJJqpSNwoM/ih51PPAF0lBk9YyeZCIWPymzlt
        srLP8usx4I2VoBmK3ovT6zi9rJw5tgzGyBrYCp5uf3VyMZepFQyXrAEtg+45l6lWx8SpHTB8twe0kG9Z
        c2Ybl5uVZ4Kbgjk1eBKO8tNQE3NDdZ3LxeJ7+9U2psU3wY3M5PHlaL+2Y8yXrcN9S7is4+CXHBZMaXmb
        M70rXaMvC7E/YDYOcVmaZt0vmdJACb1I7UX7hx2rhG4Dl0XhSN2RTI3ih+qq+/LsKrTf2zEb3+jbXBZT
        bdSwZCqTLajdXqjuSTHwrjTFUXBFiEkMcVlccaifCIZKBmjfpVVp9f+kU4lOLWpbMRG6SC5busd0zInG
        Mhhwf8+oWorF0zvbh4WE7RDtD+W+elRNdcOLK1KPSo9LqM/he3HnSM8KzMKtGl8CVYurtCIF018Y2zV2
        Yk3OdK/1o+CIEE/EDYODXNZxaANH52fblEDRHVf78Dll9ddjCpvVQi4baw5bZuLzKlGzZZL852ojgtO2
        uYVMdxZ6NnC5aiHY/mORRPMP05A9qGki9aDrbtcCLiNrXl59ysqMqtXYIh8LSVKBY/Ih5eK0jWleXm8r
        1fYXelvxDLTxL8y/keP8Bvwj0QHkLbMEAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA25c0XduYNOfbmDT/25g0/9uYNP/bmDT/3JYzfNuX
        NHHbmDTe25g0+duYNMHcljIzAAAAAAAAAAAAAAAA3ZkzLduYNPrclzRs2po1RNqaNUTamjVE3ZkzPNuY
        NJTbmDT/25g09duZNODbmDT/25g0+t2aNTUAAAAAAAAAANuYM3LbmDXHAAAAAAAAAAAAAAAAAAAAANua
        NSvbmDT+25g0/9uYNLDZmTMU25g0/9uYNP/bmDTEAAAAAAAAAADcmTSJ25g0sAAAAADdmTMtzJkzBdyZ
        M0HblzRd25g0/9uYNYjflTUY/6pVA9qWNSLbmDTd25g09wAAAAAAAAAA3Jk0iduYNLC/gEAE25g0ztaX
        OizblzTl2pc1YNuYNP/amTTR2pc0dtidOw3bmDWq25g08tuZNOAAAAAAAAAAANyZNInbmDSwAAAAAAAA
        AAAAAAAAAAAAAMyZMwXbmDTP25g0/9uYM9DbmDNy25g0/9uYNP/amDVvAAAAAAAAAADcmTSJ25g0sL+A
        QATamDS125g3KtuYNMnbmDXH25c2R9qZNNHbmDT/25g0/9uYNP7bmTST/4AAAgAAAAAAAAAA3Jk0iduY
        NLAAAAAA25cyR9+fQAjblzRd3Jk1ZtuZM1XbtiQH2po1RNuZM1XalTIpAAAAAAAAAAAAAAAAAAAAANyZ
        NInbmDSwAAAAANqYNT7bkiQH25g0VNuZM1XbmTNV1pkzGduYNE/bmDTrAAAAAAAAAAAAAAAAAAAAAAAA
        AADcmTSJ25g0sL+AQATbmDS+4Zg3KtuYM9XbmDTd25gz2tuYNU3bmDVq25g09wAAAAAAAAAAAAAAAAAA
        AAAAAAAA3Jk0iduYNLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA25YzhtuYNP4AAAAAAAAAAAAA
        AADdmjU125g0zduYNO/bmTT025g03duYNN3bmDTd25g03duYNN3bmDTd25gz1duYM4bbmDT9AAAAAAAA
        AAAAAAAA25k1zNuYM6TbmTNk25k0a9uZM1XbmTNV25kzVduZM1XbmTR/25g0/NyXNlHeljNV3Jk07wAA
        AAAAAAAAAAAAANuYNPfamjVEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA25c1W9yYM98AAAAA2pgzaNuY
        NNQAAAAAAAAAAAAAAADbmDTT25gzldyWMjPcljIz3JYyM9yWMjPcljIz3JYyM9yXNWXbmDT73Jg1V9yY
        NNjbmDWIAAAAAAAAAAAAAAAA2pg0RduYNOHbmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uY
        NPLbmDSj5pkzCgAAAAAAAAAAAAAAAPBjAADvgQAA74gAAM+cAADKmAAAz4kAAMpBAADP/wAAz/cAAMo3
        AADP5wAAgAcAAD+3AAB/twAAP6cAAIAPAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANyXNDvbmDW925g0+NuYNP/bmDT/25g0/9uY
        NP/bmDT/25g0/9uYNP/bmDT/25g0/tuYM4H/gAAC3Jg1SNyYNKbbmDTh25g0/duYNenbmDS325c0Yv+q
        VQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADalzVg25g0/NuYNP/bmDT/25g0/9uY
        NP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/alzRn358wENqYM67bmDT/25g0/9uYNP/bmDT/25g0/9uY
        NP/bmDT/25g0z92aNiYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3Zg3JduYNPfbmDT/25g17tqY
        M4vbmDN325gzd9uYM3fbmDN325gzd9uYM3fbmDN325g1XNWVKwzamTTR25g0/9uYNP/bmDT/25g0/9uY
        NP/bmDT/25g0/9uYNP/bmDT/25g17t2aNiYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADblzWb25g0/9uY
        NPvamjUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA25k0nduYNP/bmDT/25g0/9uY
        NP/bmDPV3Jc0u9uXNMXbmDT/25g0/9uYNP/bmDT/25gz0L+AQAQAAAAAAAAAAAAAAAAAAAAAAAAAANyY
        NObbmDT/2pk0pwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANuaNSvbmDT925g0/9uY
        NP/bmDT/25g0/9uXNGIAAAAA2JY0J9uYNP/bmDT/25g0/9uYNP/bmDT/2pg1YQAAAAAAAAAAAAAAAAAA
        AADbkiQH25g0/9uYNP/bmTN4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA25k0f9uY
        NP/bmDT/25g0/9uYNP/bmDT/25c0YgAAAADYljQn25g0/9uYNP/bmDT/25g0/9uYNP/bmDS3AAAAAAAA
        AAAAAAAAAAAAANmZMxTbmDT/25g0/9uXNGIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADamDOu25g0/9uYNP/bmDTv3JYyM9yWMjPZmTMUAAAAAN+fQAjcljIz3JYyM9uXNMDbmDT/25g0/9uY
        NOcAAAAAAAAAAAAAAAAAAAAA2ZkzFNuYNP/bmDT/25c0YgAAAAAAAAAA25g0Y9uZM3j/gAAC1Zw5EtyY
        NIramDSZ/6pVA9uYNL7bmDT/25g0/9uYNOsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA25g0sNuY
        NP/bmDT/25g0+AAAAAAAAAAAAAAAAAAAAADZmTMU25g0/9uYNP/blzRiAAAAANaZMxnbmDT/25g0/9qY
        NT7bmDVq25g0/9uYNP/bnjEV25g0qNuYNP/bmDT/25g08tuZM1XbmTNV2Js2IQAAAADYnTsN25kzVduZ
        M1XbmDTL25g0/9uYNP/bmDThAAAAAAAAAAAAAAAAAAAAANmZMxTbmDT/25g0/9uXNGIAAAAA/6pVA9uY
        M6TblzS225I3Dt2YNyXbmDTI25g03d2ZMzzcmDNt25g0/9uYNP/bmDT/25g0/9uYNP/blzRiAAAAANiW
        NCfbmDT/25g0/9uYNP/bmDT/25g0/9yYNKYAAAAAAAAAAAAAAAAAAAAA2ZkzFNuYNP/bmDT/25c0YgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN6bNxfbmDT025g0/9uYNP/bmDT/25g0/9uX
        NGIAAAAA2JY0J9uYNP/bmDT/25g0/9uYNP/bmDT/3Zg1QwAAAAAAAAAAAAAAAAAAAADZmTMU25g0/9uY
        NP/blzRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANyXNHvbmDT/25g0/9uY
        NP/bmDT/25c06tuYNN3bmDTi25g0/9uYNP/bmDT/25g0/9uZNLEAAAAAAAAAAAAAAAAAAAAAAAAAANmZ
        MxTbmDT/25g0/9uXNGIAAAAAAAAAANqZNHXcmTSJzJkzBd+VNRjbmTSi25g1qtuYNarbmDSU25IkB9uY
        NKvbmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDTU4ZYtEQAAAAAAAAAAAAAAAAAA
        AAAAAAAA2ZkzFNuYNP/bmDT/25c0YgAAAADZlzkb25g0/9uYNP/cmTNB25k0a9uYNP/bmDT/25g0/9uY
        NP/amDSZ/5kzBduYNXnbmDTz25g0/9uYNP/bmDT/25g0/9uYNP/bmDT825g0nNidOw0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADZmTMU25g0/9uYNP/blzRiAAAAAP//AAHbmTST25c1peaZMwrelDEf25g0t9uZ
        NczbmTXM25k1zNuZNczbmDWI//8AAdmZMxTclzRs25g1qtyXNLvbmDSw25g1ft2YNyUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANmZMxTbmDT/25g0/9uXNGIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADmmTMK4ZYtEduSNw4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2ZkzFNuYNP/bmDT/25c0YgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANuZNJ3bmDT/3Jg02AAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZmTMU25g0/9uYNP/blzRiAAAAAP//
        AAHbmTST25c1peaZMwrbmzcc25k0sdyXNLvclzS73Jc0u9yXNLvclzS72pgzaAAAAAAAAAAA25k0nduY
        NP/cmDTYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANmZMxTbmDT/25g0/9uX
        NGIAAAAA2Zc5G9uYNP/bmDT/3JkzQduYNWrbmDT/25g0/9uYNP/bmDT/25g0/9uYNP/cmDPfAAAAAAAA
        AADbmDWk25g0/9yYM98AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2ZkzFNuY
        NP/bmDT/25c0YgAAAAAAAAAA2pk0ddyZNInMmTMF1Zw5EtuXNZvclzS73Jc0u9yXNLvclzS73Jg0tNuW
        NE4AAAAAAAAAANuYNNPbmDT/25g09wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADZmTMU25g0/9uYNP/blzRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA25k02duYNP/bmTT5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANmZMxTbmDT/25g0/9uXNGIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADbmTTZ25g0/9uZNPkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA0aIuC9qYM3zblzTA2pg10NuYNP/bmDT/25c04NuZNczbmTXM25k1zNuZNczbmTXM25k1zNuZ
        NczbmTXM25k1zNuZNczbmTXM25k1zNuZNczbmDSj/4AAAtuZNNnbmDT/25k0+QAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAN+fQAjblzTA25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uY
        NP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP7flTUY25kz1tuYNP/blzP4AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA2pc0Z9uYNP/bmDT/25g0v9uYNarbmDTN2pg02NqYM67bmDWq25g1qtuY
        NarbmDWq25g1qtuYNarbmDWq25g1qtuYNarblzTF25g0/9uYNP/amTTR25c0YgAAAADbmDOq25g0/9uZ
        NOIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADbmDTG25g0/9uYNM3//wABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANqYM4vbmDT/25g09deUNhMAAAAAAAAAANuZ
        NJ3bmDT/3Jg02AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANuYNOvbmDT/3Jk0iQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA25g0sNuYNP/amDTDAAAAAAAA
        AAAAAAAA25g0q9uYNP/bmDTLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA25g08tuYNP/clzWCAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADbmDS325g0/9uY
        Nb0AAAAAAAAAAP+AAALbmDTi25g0/9uYNKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADbmDPQ25g0/9qY
        NLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANuY
        M5XbmDT/25g07eaZMwoAAAAA2pg1YduYNP/bmDT/3Jg0XgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANyX
        NHvbmDT/25g0/9yXNZHcmTVm3Jk1ZtyZNWbcmTVm3Jk1ZtyZNWbcmTVm3Jk1ZtyZNWbcmTVm3Jk1ZtyZ
        NWbcmTVm25c1m9uYNP/bmDT/3Jg0tNuYNJTbmDT625g0/9uYNN3fn0AIAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA358wENuYNNnbmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uY
        NP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDXu25c0MQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA3JU1HduYNKvbmDXp25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uY
        NP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP/bmDT/25g0/9uYNP7bmDTs2pgzrtyVMiQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8ADB/+ADAH/D/gA/j/wAH4/8HB+f/BwPn/h/D5/Ifw+cyH8PnM
        wcD5/8HB+f/gAfnsIAP5zBgH+cwOP/n////5//4/+cwOP/nMBj/57A4/+f/+P/n//j/gAAI/gAACP4AA
        Bj8f/44/H/+OPx//jj8f/45/j/+Af4AAAP/AAAH/
</value>
  </data>
</root>